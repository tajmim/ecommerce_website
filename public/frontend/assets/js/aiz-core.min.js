$.fn.toggleAttr = function (a, t, l) { return this.each(function () { var i = $(this); i.attr(a) == t ? i.attr(a, l) : i.attr(a, t) }) }, function ($) { "use strict"; aiz.data = { csrf: $('meta[name="csrf-token"]').attr("content"), appUrl: $('meta[name="app-url"]').attr("content"), fileBaseUrl: $('meta[name="file-base-url"]').attr("content") }, aiz.uploader = { data: { selectedFiles: [], selectedFilesObject: [], clickedForDelete: null, allFiles: [], multiple: !1, type: "all", next_page_url: null, prev_page_url: null }, removeInputValue: function (a, t, l) { var i = t.filter(function (t) { return t !== a }); i.length > 0 ? $(l).find(".file-amount").html(aiz.uploader.updateFileHtml(i)) : l.find(".file-amount").html(aiz.local.choose_file), $(l).find(".selected-files").val(i) }, removeAttachment: function () { $(document).on("click", ".remove-attachment", function () { var a = $(this).closest(".file-preview-item").data("id"), t = $(this).closest(".file-preview").prev('[data-toggle="aizuploader"]').find(".selected-files").val().split(",").map(Number); aiz.uploader.removeInputValue(a, t, $(this).closest(".file-preview").prev('[data-toggle="aizuploader"]')), $(this).closest(".file-preview-item").remove() }) }, deleteUploaderFile: function () { $(".aiz-uploader-delete").each(function () { $(this).on("click", function (a) { a.preventDefault(); var t = $(this).data("id"); aiz.uploader.data.clickedForDelete = t, $("#aizUploaderDelete").modal("show"), $(".aiz-uploader-confirmed-delete").on("click", function (a) { if (a.preventDefault(), 1 === a.detail) { var t = aiz.uploader.data.allFiles[aiz.uploader.data.allFiles.findIndex(a => a.id === aiz.uploader.data.clickedForDelete)]; $.ajax({ url: aiz.data.appUrl + "/aiz-uploader/destroy/" + aiz.uploader.data.clickedForDelete, type: "DELETE", dataType: "JSON", data: { id: aiz.uploader.data.clickedForDelete, _method: "DELETE", _token: aiz.data.csrf }, success: function () { aiz.uploader.data.selectedFiles = aiz.uploader.data.selectedFiles.filter(function (a) { return a !== aiz.uploader.data.clickedForDelete }), aiz.uploader.data.selectedFilesObject = aiz.uploader.data.selectedFilesObject.filter(function (a) { return a !== t }), aiz.uploader.updateUploaderSelected(), aiz.uploader.getAllUploads(aiz.data.appUrl + "/aiz-uploader/get-uploaded-files"), aiz.uploader.data.clickedForDelete = null, $("#aizUploaderDelete").modal("hide") } }) } }) }) }) }, uploadSelect: function () { $(".aiz-uploader-select").each(function () { var a = $(this); a.on("click", function (t) { var l = $(this).data("value"), i = aiz.uploader.data.allFiles[aiz.uploader.data.allFiles.findIndex(a => a.id === l)]; a.closest(".aiz-file-box-wrap").toggleAttr("data-selected", "true", "false"), aiz.uploader.data.multiple || a.closest(".aiz-file-box-wrap").siblings().attr("data-selected", "false"), aiz.uploader.data.selectedFiles.includes(l) ? (aiz.uploader.data.selectedFiles = aiz.uploader.data.selectedFiles.filter(function (a) { return a !== l }), aiz.uploader.data.selectedFilesObject = aiz.uploader.data.selectedFilesObject.filter(function (a) { return a !== i })) : (aiz.uploader.data.multiple || (aiz.uploader.data.selectedFiles = [], aiz.uploader.data.selectedFilesObject = []), aiz.uploader.data.selectedFiles.push(l), aiz.uploader.data.selectedFilesObject.push(i)), aiz.uploader.addSelectedValue(), aiz.uploader.updateUploaderSelected() }) }) }, updateFileHtml: function (a) { var t = ""; if (a.length > 1) var t = aiz.local.files_selected; else var t = aiz.local.file_selected; return a.length + " " + t }, updateUploaderSelected: function () { $(".aiz-uploader-selected").html(aiz.uploader.updateFileHtml(aiz.uploader.data.selectedFiles)) }, clearUploaderSelected: function () { $(".aiz-uploader-selected-clear").on("click", function () { aiz.uploader.data.selectedFiles = [], aiz.uploader.addSelectedValue(), aiz.uploader.addHiddenValue(), aiz.uploader.resetFilter(), aiz.uploader.updateUploaderSelected(), aiz.uploader.updateUploaderFiles() }) }, resetFilter: function () { $('[name="aiz-uploader-search"]').val(""), $('[name="aiz-show-selected"]').prop("checked", !1), $('[name="aiz-uploader-sort"] option[value=newest]').prop("selected", !0) }, getAllUploads: function (a, t = null, l = null) { $(".aiz-uploader-all").html('<div class="align-items-center d-flex h-100 justify-content-center w-100"><div class="spinner-border" role="status"></div></div>'); var i = {}; null != t && t.length > 0 && (i.search = t), null != l && l.length > 0 ? i.sort = l : i.sort = "newest", $.get(a, i, function (a, t) { "string" == typeof a && (a = JSON.parse(a)), aiz.uploader.data.allFiles = a.data, aiz.uploader.allowedFileType(), aiz.uploader.addSelectedValue(), aiz.uploader.addHiddenValue(), aiz.uploader.updateUploaderFiles(), null != a.next_page_url ? (aiz.uploader.data.next_page_url = a.next_page_url, $("#uploader_next_btn").removeAttr("disabled")) : $("#uploader_next_btn").attr("disabled", !0), null != a.prev_page_url ? (aiz.uploader.data.prev_page_url = a.prev_page_url, $("#uploader_prev_btn").removeAttr("disabled")) : $("#uploader_prev_btn").attr("disabled", !0) }) }, showSelectedFiles: function () { $('[name="aiz-show-selected"]').on("change", function () { $(this).is(":checked") ? aiz.uploader.data.allFiles = aiz.uploader.data.selectedFilesObject : aiz.uploader.getAllUploads(aiz.data.appUrl + "/aiz-uploader/get-uploaded-files"), aiz.uploader.updateUploaderFiles() }) }, searchUploaderFiles: function () { $('[name="aiz-uploader-search"]').on("keyup", function () { var a = $(this).val(); aiz.uploader.getAllUploads(aiz.data.appUrl + "/aiz-uploader/get-uploaded-files", a, $('[name="aiz-uploader-sort"]').val()) }) }, sortUploaderFiles: function () { $('[name="aiz-uploader-sort"]').on("change", function () { var a = $(this).val(); aiz.uploader.getAllUploads(aiz.data.appUrl + "/aiz-uploader/get-uploaded-files", $('[name="aiz-uploader-search"]').val(), a) }) }, addSelectedValue: function () { for (var a = 0; a < aiz.uploader.data.allFiles.length; a++)aiz.uploader.data.selectedFiles.includes(aiz.uploader.data.allFiles[a].id) ? aiz.uploader.data.allFiles[a].selected = !0 : aiz.uploader.data.allFiles[a].selected = !1 }, addHiddenValue: function () { for (var a = 0; a < aiz.uploader.data.allFiles.length; a++)aiz.uploader.data.allFiles[a].aria_hidden = !1 }, allowedFileType: function () { if ("all" !== aiz.uploader.data.type) { let a = aiz.uploader.data.type.split(","); aiz.uploader.data.allFiles = aiz.uploader.data.allFiles.filter(function (t) { return a.includes(t.type) }) } }, updateUploaderFiles: function () { $(".aiz-uploader-all").html('<div class="align-items-center d-flex h-100 justify-content-center w-100"><div class="spinner-border" role="status"></div></div>'); var a = aiz.uploader.data.allFiles; setTimeout(function () { if ($(".aiz-uploader-all").html(null), a.length > 0) for (var t = 0; t < a.length; t++) { var l = ""; l = "image" === a[t].type ? '<img src="' + aiz.data.fileBaseUrl + a[t].file_name + '" class="img-fit">' : '<i class="la la-file-text"></i>'; var i = '<div class="aiz-file-box-wrap" aria-hidden="' + a[t].aria_hidden + '" data-selected="' + a[t].selected + '"><div class="aiz-file-box"><div class="card card-file aiz-uploader-select" title="' + a[t].file_original_name + "." + a[t].extension + '" data-value="' + a[t].id + '"><div class="card-file-thumb">' + l + '</div><div class="card-body"><h6 class="d-flex"><span class="text-truncate title">' + a[t].file_original_name + '</span><span class="ext flex-shrink-0">.' + a[t].extension + "</span></h6><p>" + aiz.extra.bytesToSize(a[t].file_size) + "</p></div></div></div></div>"; $(".aiz-uploader-all").append(i) } else $(".aiz-uploader-all").html('<div class="align-items-center d-flex h-100 justify-content-center w-100 nav-tabs"><div class="text-center"><h3>No files found</h3></div></div>'); aiz.uploader.uploadSelect(), aiz.uploader.deleteUploaderFile() }, 300) }, inputSelectPreviewGenerate: function (a) { a.find(".selected-files").val(aiz.uploader.data.selectedFiles), a.next(".file-preview").html(null), aiz.uploader.data.selectedFiles.length > 0 ? $.post(aiz.data.appUrl + "/aiz-uploader/get_file_by_ids", { _token: aiz.data.csrf, ids: aiz.uploader.data.selectedFiles.toString() }, function (t) { if (a.next(".file-preview").html(null), t.length > 0) { a.find(".file-amount").html(aiz.uploader.updateFileHtml(t)); for (var l = 0; l < t.length; l++) { var i = ""; i = "image" === t[l].type ? '<img src="' + t[l].file_name + '" class="img-fit">' : '<i class="la la-file-text"></i>'; var o = '<div class="d-flex justify-content-between align-items-center mt-2 file-preview-item" data-id="' + t[l].id + '" title="' + t[l].file_original_name + "." + t[l].extension + '"><div class="align-items-center align-self-stretch d-flex justify-content-center thumb">' + i + '</div><div class="col body"><h6 class="d-flex"><span class="text-truncate title">' + t[l].file_original_name + '</span><span class="flex-shrink-0 ext">.' + t[l].extension + "</span></h6><p>" + aiz.extra.bytesToSize(t[l].file_size) + '</p></div><div class="remove"><button class="btn btn-sm btn-link remove-attachment" type="button"><i class="la la-close"></i></button></div></div>'; a.next(".file-preview").append(o) } } else a.find(".file-amount").html(aiz.local.choose_file) }) : a.find(".file-amount").html(aiz.local.choose_file) }, editorImageGenerate: function (a) { if (aiz.uploader.data.selectedFiles.length > 0) for (var t = 0; t < aiz.uploader.data.selectedFiles.length; t++) { var l = aiz.uploader.data.allFiles.findIndex(a => a.id === aiz.uploader.data.selectedFiles[t]), i = ""; "image" === aiz.uploader.data.allFiles[l].type && (i = '<img src="' + aiz.data.fileBaseUrl + aiz.uploader.data.allFiles[l].file_name + '">', a[0].insertHTML(i)) } }, dismissUploader: function () { $("#aizUploaderModal").on("hidden.bs.modal", function () { $(".aiz-uploader-backdrop").remove(), $("#aizUploaderModal").remove() }) }, trigger: function (a = null, t = "", l = "all", i = "", o = !1, n = null) { var a = $(a), o = o, l = l, s = i; "" !== s ? aiz.uploader.data.selectedFiles = s.split(",").map(Number) : aiz.uploader.data.selectedFiles = [], void 0 !== l && l.length > 0 && (aiz.uploader.data.type = l), o ? aiz.uploader.data.multiple = !0 : aiz.uploader.data.multiple = !1, $.post(aiz.data.appUrl + "/aiz-uploader", { _token: aiz.data.csrf }, function (l) { $("body").append(l), $("#aizUploaderModal").modal("show"), aiz.plugins.aizUppy(), aiz.uploader.getAllUploads(aiz.data.appUrl + "/aiz-uploader/get-uploaded-files", null, $('[name="aiz-uploader-sort"]').val()), aiz.uploader.updateUploaderSelected(), aiz.uploader.clearUploaderSelected(), aiz.uploader.sortUploaderFiles(), aiz.uploader.searchUploaderFiles(), aiz.uploader.showSelectedFiles(), aiz.uploader.dismissUploader(), $("#uploader_next_btn").on("click", function () { null != aiz.uploader.data.next_page_url && ($('[name="aiz-show-selected"]').prop("checked", !1), aiz.uploader.getAllUploads(aiz.uploader.data.next_page_url)) }), $("#uploader_prev_btn").on("click", function () { null != aiz.uploader.data.prev_page_url && ($('[name="aiz-show-selected"]').prop("checked", !1), aiz.uploader.getAllUploads(aiz.uploader.data.prev_page_url)) }), $(".aiz-uploader-search i").on("click", function () { $(this).parent().toggleClass("open") }), $('[data-toggle="aizUploaderAddSelected"]').on("click", function () { "input" === t ? aiz.uploader.inputSelectPreviewGenerate(a) : "direct" === t && n(aiz.uploader.data.selectedFiles), $("#aizUploaderModal").modal("hide") }) }) }, initForInput: function () { $(document).on("click", '[data-toggle="aizuploader"]', function (a) { if (1 === a.detail) { var t = $(this), l = t.data("multiple"), i = t.data("type"), o = t.find(".selected-files").val(); l = l || "", i = i || "", o = o || "", aiz.uploader.trigger(this, "input", i, o, l) } }) }, previewGenerate: function () { $('[data-toggle="aizuploader"]').each(function () { var a = $(this), t = a.find(".selected-files").val(); "" != t && $.post(aiz.data.appUrl + "/aiz-uploader/get_file_by_ids", { _token: aiz.data.csrf, ids: t }, function (t) { if (a.next(".file-preview").html(null), t.length > 0) { a.find(".file-amount").html(aiz.uploader.updateFileHtml(t)); for (var l = 0; l < t.length; l++) { var i = ""; i = "image" === t[l].type ? '<img src="' + t[l].file_name + '" class="img-fit">' : '<i class="la la-file-text"></i>'; var o = '<div class="d-flex justify-content-between align-items-center mt-2 file-preview-item" data-id="' + t[l].id + '" title="' + t[l].file_original_name + "." + t[l].extension + '"><div class="align-items-center align-self-stretch d-flex justify-content-center thumb">' + i + '</div><div class="col body"><h6 class="d-flex"><span class="text-truncate title">' + t[l].file_original_name + '</span><span class="ext flex-shrink-0">.' + t[l].extension + "</span></h6><p>" + aiz.extra.bytesToSize(t[l].file_size) + '</p></div><div class="remove"><button class="btn btn-sm btn-link remove-attachment" type="button"><i class="la la-close"></i></button></div></div>'; a.next(".file-preview").append(o) } } else a.find(".file-amount").html(aiz.local.choose_file) }) }) } }, aiz.plugins = { metismenu: function () { $('[data-toggle="aiz-side-menu"]').metisMenu() }, bootstrapSelect: function (a = "") { $(".aiz-selectpicker").each(function (t) { var l = $(this); if (!l.parent().hasClass("bootstrap-select")) { var i = l.data("selected"); void 0 !== i && l.val(i), l.selectpicker({ size: 5, noneSelectedText: aiz.local.nothing_selected, virtualScroll: !1 }) } "refresh" === a && l.selectpicker("refresh"), "destroy" === a && l.selectpicker("destroy") }) }, tagify: function () { $(".aiz-tag-input").not(".tagify").each(function () { var $this = $(this), maxTags = $this.data("max-tags"), whitelist = $this.data("whitelist"), onchange = $this.data("on-change"); maxTags = maxTags || 1 / 0, whitelist = whitelist || [], $this.tagify({ maxTags: maxTags, whitelist: whitelist, dropdown: { enabled: 1 } }); try { callback = eval(onchange) } catch (e) { var callback = "" } "function" == typeof callback && ($this.on("removeTag", function () { callback() }), $this.on("add", function () { callback() })) }) }, textEditor: function () { $(".aiz-text-editor").each(function (a) { var t = $(this), l = t.data("buttons"), i = t.data("min-height"), o = t.attr("placeholder"), n = t.data("format"); l = l || [["font", ["bold", "underline", "italic", "clear"]], ["para", ["ul", "ol", "paragraph"]], ["style", ["style"]], ["color", ["color"]], ["table", ["table"]], ["insert", ["link", "picture", "video"]], ["view", ["fullscreen", "undo", "redo"]],], o = o || "", i = i || 200, n = void 0 !== n && n, t.summernote({ toolbar: l, placeholder: o, disableDragAndDrop: !0, height: i, callbacks: { onImageUpload: function (a) { a.pop() }, onPaste: function (a) { if (n) { var t = ((a.originalEvent || a).clipboardData || window.clipboardData).getData("Text"); a.preventDefault(), document.execCommand("insertText", !1, t) } } } }); var s = t.summernote("module", "videoDialog").createVideoNode; t.summernote("module", "videoDialog").createVideoNode = function (a) { var t = $('<div class="embed-responsive embed-responsive-16by9"></div>'), l = s(a); return l = $(l).addClass("embed-responsive-item"), t.append(l)[0] } }) }, dateRange: function () { $(".aiz-date-range").each(function () { var a = $(this), t = moment().startOf("day"); a.val(); var l = !1, i = !1, o = !1, n = { Today: [moment(), moment()], Yesterday: [moment().subtract(1, "days"), moment().subtract(1, "days"),], "Last 7 Days": [moment().subtract(6, "days"), moment()], "Last 30 Days": [moment().subtract(29, "days"), moment()], "This Month": [moment().startOf("month"), moment().endOf("month"),], "Last Month": [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month"),] }, s = a.data("single"), d = a.data("show-dropdown"), r = a.data("format"), c = a.data("separator"), u = a.data("past-disable"), p = a.data("future-disable"), f = a.data("time-picker"), m = a.data("time-gap"), o = a.data("advanced-range"); s = !!s && s, d = !!d && d, r = r || "YYYY-MM-DD", c = c || " / ", l = u ? t : l, i = p ? t : i, f = !!f && f, m = m || 1, n = o ? n : "", a.daterangepicker({ singleDatePicker: s, showDropdowns: d, minDate: l, maxDate: i, timePickerIncrement: m, autoUpdateInput: !1, ranges: n, locale: { format: r, separator: c, applyLabel: "Select", cancelLabel: "Clear" } }), s ? a.on("apply.daterangepicker", function (t, l) { a.val(l.startDate.format(r)) }) : a.on("apply.daterangepicker", function (t, l) { a.val(l.startDate.format(r) + c + l.endDate.format(r)) }), a.on("cancel.daterangepicker", function (t, l) { a.val("") }) }) }, timePicker: function () { $(".aiz-time-picker").each(function () { var a = $(this), t = a.data("minute-step"), l = a.data("default"); t = t || 10, l = l || "00:00", a.timepicker({ template: "dropdown", minuteStep: t, defaultTime: l, icons: { up: "las la-angle-up", down: "las la-angle-down" }, showInputs: !1 }) }) }, colorPicker: function () { $(".aiz-color-picker").on("change", function () { var a = $(this); let t = a.val(); a.parent().parent().siblings(".aiz-color-input").val(t) }), $(".aiz-color-input").on("change", function () { let a = $(this).val(); $(this).siblings(".input-group-append").children(".input-group-text").children(".aiz-color-picker").val(a) }) }, fooTable: function () { $(".aiz-table").each(function () { var a = $(this), t = a.data("empty"); t = t || aiz.local.nothing_found, a.footable({ breakpoints: { xs: 576, sm: 768, md: 992, lg: 1200, xl: 1400 }, cascade: !0, on: { "ready.ft.table": function (a, t) { aiz.extra.deleteConfirm(), aiz.plugins.bootstrapSelect("refresh") } }, empty: t }) }) }, notify: function (a = "dark", t = "") { $.notify({ message: t }, { showProgressbar: !0, delay: 2500, mouse_over: "pause", placement: { from: "bottom", align: "left" }, animate: { enter: "animated fadeInUp", exit: "animated fadeOutDown" }, type: a, template: '<div data-notify="container" class="aiz-notify alert alert-{0}" role="alert"><button type="button" aria-hidden="true" data-notify="dismiss" class="close"><i class="las la-times"></i></button><span data-notify="message">{2}</span><div class="progress" data-notify="progressbar"><div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div></div></div>' }) }, aizUppy: function () { if ($("#aiz-upload-files").length > 0) { var a = Uppy.Core({ autoProceed: !0 }); a.use(Uppy.Dashboard, { target: "#aiz-upload-files", inline: !0, showLinkToFileUploadResult: !1, showProgressDetails: !0, hideCancelButton: !0, hidePauseResumeButton: !0, hideUploadButton: !0, proudlyDisplayPoweredByUppy: !1, locale: { strings: { addMoreFiles: aiz.local.add_more_files, addingMoreFiles: aiz.local.adding_more_files, dropPaste: aiz.local.drop_files_here_paste_or + " %{browse}", browse: aiz.local.browse, uploadComplete: aiz.local.upload_complete, uploadPaused: aiz.local.upload_paused, resumeUpload: aiz.local.resume_upload, pauseUpload: aiz.local.pause_upload, retryUpload: aiz.local.retry_upload, cancelUpload: aiz.local.cancel_upload, xFilesSelected: { 0: "%{smart_count} " + aiz.local.file_selected, 1: "%{smart_count} " + aiz.local.files_selected }, uploadingXFiles: { 0: aiz.local.uploading + " %{smart_count} " + aiz.local.file, 1: aiz.local.uploading + " %{smart_count} " + aiz.local.files }, processingXFiles: { 0: aiz.local.processing + " %{smart_count} " + aiz.local.file, 1: aiz.local.processing + " %{smart_count} " + aiz.local.files }, uploading: aiz.local.uploading, complete: aiz.local.complete } } }), a.use(Uppy.XHRUpload, { endpoint: aiz.data.appUrl + "/aiz-uploader/upload", fieldName: "aiz_file", formData: !0, headers: { "X-CSRF-TOKEN": aiz.data.csrf } }), a.on("upload-success", function () { aiz.uploader.getAllUploads(aiz.data.appUrl + "/aiz-uploader/get-uploaded-files") }) } }, tooltip: function () { $("body").tooltip({ selector: '[data-toggle="tooltip"]' }).click(function () { $('[data-toggle="tooltip"]').tooltip("hide") }) }, countDown: function () { $(".aiz-count-down").length > 0 && $(".aiz-count-down").each(function () { var a = $(this), t = a.data("date"); a.countdown(t).on("update.countdown", function (a) { $(this).html(a.strftime('<div class="countdown-item"><span class="countdown-digit">%-D</span></div><span class="countdown-separator">:</span><div class="countdown-item"><span class="countdown-digit">%H</span></div><span class="countdown-separator">:</span><div class="countdown-item"><span class="countdown-digit">%M</span></div><span class="countdown-separator">:</span><div class="countdown-item"><span class="countdown-digit">%S</span></div>')) }) }) }, countDownCircle: function () { let a = '<div id="time"><div class="circle"><svg><circle cx="30" cy="30" r="30"></circle><circle cx="30" cy="30" r="30" id="dd"></circle></svg><div id="days">00 <br><span>Days</span></div></div><div class="circle"><svg><circle cx="30" cy="30" r="30"></circle><circle cx="30" cy="30" r="30" id="hh"></circle></svg><div id="hours">00 <br><span>Hrs</span></div></div><div class="circle"><svg><circle cx="30" cy="30" r="30"></circle><circle cx="30" cy="30" r="30" id="mm"></circle></svg><div id="minutes">00 <br><span>Min</span></div></div><div class="circle"><svg><circle cx="30" cy="30" r="30"></circle><circle cx="30" cy="30" r="30" id="ss"></circle></svg><div id="seconds">00 <br><span>Sec</span></div></div></div>'; $(".aiz-count-down-circle").length > 0 && $(".aiz-count-down-circle").each(function () { var t = $(this); t.html(a); let l = t.find("#days"), i = t.find("#hours"), o = t.find("#minutes"), n = t.find("#seconds"), s = t.find("#dd"), d = t.find("#hh"), r = t.find("#mm"), c = t.find("#ss"); var u = t.attr("end-date"); let p = new Date(u).getTime(), f = setInterval(function () { let a = new Date().getTime(), t = p - a; if (t > 0) { let u = Math.floor(t / 864e5), m = Math.floor(t % 864e5 / 36e5), h = Math.floor(t % 36e5 / 6e4), v = Math.floor(t % 6e4 / 1e3); l.html(u + "<br><span>Days</span>"), i.html(m + "<br><span>Hrs</span>"), o.html(h + "<br><span>Min</span>"), n.html(v + "<br><span>Sec</span>"), s.css("strokeDashoffset", 190 - 190 * u / 365), d.css("strokeDashoffset", 190 - 190 * m / 24), r.css("strokeDashoffset", 190 - 190 * h / 60), c.css("strokeDashoffset", 190 - 190 * v / 60) } else clearInterval(f) }) }) }, slickCarousel: function () { $(".aiz-carousel").not(".slick-initialized").each(function () { var a = $(this), t = a.data("xs-items"), l = a.data("sm-items"), i = a.data("md-items"), o = a.data("lg-items"), n = a.data("xl-items"), s = a.data("items"), d = a.data("center"), r = a.data("arrows"), c = a.data("dots"), u = a.data("rows"), p = a.data("autoplay"), f = a.data("fade"), m = a.data("nav-for"), h = a.data("infinite"), v = a.data("focus-select"), g = a.data("auto-height"), b = a.data("vertical"), y = a.data("vertical-xs"), k = a.data("vertical-sm"), x = a.data("vertical-md"), w = a.data("vertical-lg"), z = a.data("vertical-xl"); s = s || 1, n = n || s, o = o || n, i = i || o, l = l || i, t = t || l, b = !!b && b, z = void 0 === z ? b : z, w = void 0 === w ? z : w, x = void 0 === x ? w : x, k = void 0 === k ? x : k, y = void 0 === y ? k : y, d = !!d && d, r = !!r && r, c = !!c && c, u = u || 1, p = !!p && p, f = !!f && f, m = m || null, h = !!h && h, v = !!v && v, g = !!g && g; var C = "rtl" === $("html").attr("dir") && !b, _ = "rtl" === $("html").attr("dir") && !z, F = "rtl" === $("html").attr("dir") && !w, S = "rtl" === $("html").attr("dir") && !x, U = "rtl" === $("html").attr("dir") && !k, T = "rtl" === $("html").attr("dir") && !y; a.slick({ slidesToShow: s, autoplay: p, dots: c, arrows: r, infinite: h, vertical: b, rtl: C, rows: u, centerPadding: "0px", centerMode: d, fade: f, asNavFor: m, focusOnSelect: v, adaptiveHeight: g, slidesToScroll: 1, prevArrow: '<button type="button" class="slick-prev"><i class="las la-angle-left"></i></button>', nextArrow: '<button type="button" class="slick-next"><i class="las la-angle-right"></i></button>', responsive: [{ breakpoint: 1500, settings: { slidesToShow: n, vertical: z, rtl: _ } }, { breakpoint: 1200, settings: { slidesToShow: o, vertical: w, rtl: F } }, { breakpoint: 992, settings: { slidesToShow: i, vertical: x, rtl: S } }, { breakpoint: 768, settings: { slidesToShow: l, vertical: k, rtl: U } }, { breakpoint: 576, settings: { slidesToShow: t, vertical: y, rtl: T } },] }) }) }, chart: function (a, t) { $(a).length && $(a).each(function () { var a = $(this); new Chart(a, t) }) }, noUiSlider: function () { $(".aiz-range-slider")[0] && $(".aiz-range-slider").each(function () { var a = document.getElementById("input-slider-range"), t = document.getElementById("input-slider-range-value-low"), l = document.getElementById("input-slider-range-value-high"), i = [t, l]; noUiSlider.create(a, { start: [parseInt(t.getAttribute("data-range-value-low")), parseInt(l.getAttribute("data-range-value-high")),], connect: !0, range: { min: parseInt(a.getAttribute("data-range-value-min")), max: parseInt(a.getAttribute("data-range-value-max")) } }), a.noUiSlider.on("update", function (a, t) { i[t].textContent = a[t] }), a.noUiSlider.on("change", function (a, t) { rangefilter(a) }) }) }, zoom: function () { $(".img-zoom")[0] && ($(".img-zoom").zoom({ magnify: 1.5 }), ("ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) && $(".img-zoom").trigger("zoom.destroy")) }, jsSocials: function () { $(".aiz-share")[0] && $(".aiz-share").jsSocials({ showLabel: !1, showCount: !1, shares: [{ share: "email", logo: "lar la-envelope" }, { share: "twitter", logo: "lab la-twitter" }, { share: "facebook", logo: "lab la-facebook-f" }, { share: "linkedin", logo: "lab la-linkedin-in" }, { share: "whatsapp", logo: "lab la-whatsapp" }] }) }, particles: function () { particlesJS("particles-js", { particles: { number: { value: 80, density: { enable: !0, value_area: 800 } }, color: { value: "#dfdfe6" }, shape: { type: "circle", stroke: { width: 0, color: "#000000" }, polygon: { nb_sides: 5 }, image: { src: "img/github.svg", width: 100, height: 100 } }, opacity: { value: .5, random: !1, anim: { enable: !1, speed: 1, opacity_min: .1, sync: !1 } }, size: { value: 5, random: !0, anim: { enable: !1, speed: 40, size_min: .1, sync: !1 } }, line_linked: { enable: !0, distance: 150, color: "#dfdfe6", opacity: .4, width: 1 }, move: { enable: !0, speed: 6, direction: "none", random: !1, straight: !1, out_mode: "out", attract: { enable: !1, rotateX: 600, rotateY: 1200 } } }, interactivity: { detect_on: "canvas", events: { onhover: { enable: !0, mode: "repulse" }, onclick: { enable: !0, mode: "push" }, resize: !0 }, modes: { grab: { distance: 400, line_linked: { opacity: 1 } }, bubble: { distance: 400, size: 40, duration: 2, opacity: 8, speed: 3 }, repulse: { distance: 200 }, push: { particles_nb: 4 }, remove: { particles_nb: 2 } } }, retina_detect: !0, config_demo: { hide_card: !1, background_color: "#b61924", background_image: "", background_position: "50% 50%", background_repeat: "no-repeat", background_size: "cover" } }) } }, aiz.extra = { refreshToken: function () { $.get(aiz.data.appUrl + "/refresh-csrf").done(function (a) { aiz.data.csrf = a }) }, mobileNavToggle: function () { window.matchMedia("(max-width: 1200px)").matches && $("body").addClass("side-menu-closed"), $('[data-toggle="aiz-mobile-nav"]').on("click", function () { $("body").hasClass("side-menu-open") ? $("body").addClass("side-menu-closed").removeClass("side-menu-open") : $("body").hasClass("side-menu-closed") ? $("body").removeClass("side-menu-closed").addClass("side-menu-open") : $("body").removeClass("side-menu-open").addClass("side-menu-closed") }), $(".aiz-sidebar-overlay").on("click", function () { $("body").removeClass("side-menu-open").addClass("side-menu-closed") }) }, initActiveMenu: function () { $('[data-toggle="aiz-side-menu"] a').each(function () { var a = window.location.href.split(/[?#]/)[0]; (this.href == a || $(this).hasClass("active")) && ($(this).addClass("active"), $(this).closest(".aiz-side-nav-item").addClass("mm-active"), $(this).closest(".level-2").siblings("a").addClass("level-2-active"), $(this).closest(".level-3").siblings("a").addClass("level-3-active")) }) }, deleteConfirm: function () { $(".confirm-delete").click(function (a) { a.preventDefault(); var t = $(this).data("href"); $("#delete-modal").modal("show"), $("#delete-link").attr("href", t) }), $(".confirm-cancel").click(function (a) { a.preventDefault(); var t = $(this).data("href"); $("#cancel-modal").modal("show"), $("#cancel-link").attr("href", t) }), $(".confirm-complete").click(function (a) { a.preventDefault(); var t = $(this).data("href"); $("#complete-modal").modal("show"), $("#comfirm-link").attr("href", t) }), $(".confirm-alert").click(function (a) { a.preventDefault(); var t = $(this).data("href"), l = $(this).data("target"); $(l).modal("show"), $(l).find(".comfirm-link").attr("href", t), $("#comfirm-link").attr("href", t) }) }, bytesToSize: function (a) { var t = ["Bytes", "KB", "MB", "GB", "TB"]; if (0 == a) return "0 Byte"; var l = parseInt(Math.floor(Math.log(a) / Math.log(1024))); return Math.round(a / Math.pow(1024, l), 2) + " " + t[l] }, multiModal: function () { $(document).on("show.bs.modal", ".modal", function (a) { var t = 1040 + 10 * $(".modal:visible").length; $(this).css("z-index", t), setTimeout(function () { $(".modal-backdrop").not(".modal-stack").css("z-index", t - 1).addClass("modal-stack") }, 0) }), $(document).on("hidden.bs.modal", function () { $(".modal.show").length > 0 && $("body").addClass("modal-open") }) }, bsCustomFile: function () { $(".custom-file input").change(function (a) { for (var t = [], l = 0; l < $(this)[0].files.length; l++)t.push($(this)[0].files[l].name); 1 === t.length ? $(this).next(".custom-file-name").html(t[0]) : t.length > 1 ? $(this).next(".custom-file-name").html(t.length + " " + aiz.local.files_selected) : $(this).next(".custom-file-name").html(aiz.local.choose_file) }) }, stopPropagation: function () { $(document).on("click", ".stop-propagation", function (a) { a.stopPropagation() }) }, outsideClickHide: function () { $(document).on("click", function (a) { $(".document-click-d-none").addClass("d-none") }) }, inputRating: function () { $(".rating-input").each(function () { $(this).find("label").on({ mouseover: function (a) { $(this).find("i").addClass("hover"), $(this).prevAll().find("i").addClass("hover") }, mouseleave: function (a) { $(this).find("i").removeClass("hover"), $(this).prevAll().find("i").removeClass("hover") }, click: function (a) { $(this).siblings().find("i").removeClass("active"), $(this).find("i").addClass("active"), $(this).prevAll().find("i").addClass("active") } }), $(this).find("input").is(":checked") && ($(this).find("label").siblings().find("i").removeClass("active"), $(this).find("input:checked").closest("label").find("i").addClass("active"), $(this).find("input:checked").closest("label").prevAll().find("i").addClass("active")) }) }, scrollToBottom: function () { $(".scroll-to-btm").each(function (a, t) { t.scrollTop = t.scrollHeight }) }, classToggle: function () { $(document).on("click", '[data-toggle="class-toggle"]', function () { var a = $(this), t = a.data("target"), l = a.data("same"), i = $(this).data("backdrop"); $(t).hasClass("active") ? ($(t).removeClass("active"), $(l).removeClass("active"), a.removeClass("active"), $("body").removeClass("overflow-hidden")) : ($(t).addClass("active"), a.addClass("active"), "static" == i && $("body").addClass("overflow-hidden")) }) }, collapseSidebar: function () { $(document).on("click", '[data-toggle="collapse-sidebar"]', function (a, t) { var l = $(this), i = $(this).data("target"), o = $(this).data("siblings"); e.preventDefault(), $(i).hasClass("opened") ? ($(i).removeClass("opened"), $(o).removeClass("opened"), $(l).removeClass("opened")) : ($(i).addClass("opened"), $(l).addClass("opened")) }) }, autoScroll: function () { $(".aiz-auto-scroll").length > 0 && $(".aiz-auto-scroll").each(function () { var a = $(this).data("options"); a = JSON.parse(a = a || '{"delay" : 2000 ,"amount" : 70 }'), this.delay = parseInt(a.delay) || 2e3, this.amount = parseInt(a.amount) || 70, this.autoScroll = $(this), this.iScrollHeight = this.autoScroll.prop("scrollHeight"), this.iScrollTop = this.autoScroll.prop("scrollTop"), this.iHeight = this.autoScroll.height(); var t = this; this.timerId = setInterval(function () { t.iScrollTop + t.iHeight < t.iScrollHeight ? (t.iScrollTop = t.autoScroll.prop("scrollTop"), t.iScrollTop += t.amount, t.autoScroll.animate({ scrollTop: t.iScrollTop }, "slow", "linear")) : (t.iScrollTop -= t.iScrollTop, t.autoScroll.animate({ scrollTop: "0px" }, "fast", "swing")) }, t.delay) }) }, addMore: function () { $('[data-toggle="add-more"]').each(function () { var a = $(this), t = a.data("content"), l = a.data("target"); a.on("click", function (a) { a.preventDefault(), $(l).append(t), aiz.plugins.bootstrapSelect() }) }) }, removeParent: function () { $(document).on("click", '[data-toggle="remove-parent"]', function () { var a = $(this), t = a.data("parent"); a.closest(t).remove() }) }, selectHideShow: function () { $('[data-show="selectShow"]').each(function () { var a = $(this).data("target"); $(this).on("change", function () { var t = $(this).val(); $(a).children().not("." + t).addClass("d-none"), $(a).find("." + t).removeClass("d-none") }) }) }, plusMinus: function () { $(".aiz-plus-minus input").each(function () { var a = $(this), t = parseInt($(this).attr("min")), l = parseInt($(this).attr("max")), i = parseInt($(this).val()); i <= t ? a.siblings('[data-type="minus"]').attr("disabled", !0) : a.siblings('[data-type="minus"]').attr("disabled") && a.siblings('[data-type="minus"]').removeAttr("disabled"), i >= l ? a.siblings('[data-type="plus"]').attr("disabled", !0) : a.siblings('[data-type="plus"]').attr("disabled") && a.siblings('[data-type="plus"]').removeAttr("disabled") }), $(".aiz-plus-minus button").off("click").on("click", function (a) { a.preventDefault(); var t = $(this).attr("data-field"), l = $(this).attr("data-type"), i = $("input[name='" + t + "']"), o = parseInt(i.val()); isNaN(o) ? i.val(0) : "minus" == l ? (o > i.attr("min") && i.val(o - 1).change(), parseInt(i.val()) == i.attr("min") && $(this).attr("disabled", !0)) : "plus" == l && (o < i.attr("max") && i.val(o + 1).change(), parseInt(i.val()) == i.attr("max") && $(this).attr("disabled", !0)) }), $(".aiz-plus-minus input").off("change").on("change", function () { var a = parseInt($(this).attr("min")), t = parseInt($(this).attr("max")), l = parseInt($(this).val()); name = $(this).attr("name"), l >= a ? $(this).siblings("[data-type='minus']").removeAttr("disabled") : (alert(translate("Sorry, the minimum limit has been reached")), $(this).val(a)), l <= t ? $(this).siblings("[data-type='plus']").removeAttr("disabled") : (alert(translate("Sorry, the maximum limit has been reached")), $(this).val(t)), "function" == typeof getVariantPrice && getVariantPrice() }) }, hovCategoryMenu: function () { $("#category-menu-icon, #category-sidebar").on("mouseover", function (a) { $("#hover-category-menu").addClass("active").removeClass("d-none") }).on("mouseout", function (a) { $("#hover-category-menu").addClass("d-none").removeClass("active") }) }, clickCategoryMenu: function () { var a = $("#click-category-menu"); a.hide(), a.removeClass("d-none"), $("#category-menu-bar").on("click", function (t) { a.slideToggle(500), $("#category-menu-bar-icon").hasClass("show") ? $("#category-menu-bar-icon").removeClass("show") : $("#category-menu-bar-icon").addClass("show") }) }, hovUserTopMenu: function () { $("#nav-user-info").on("mouseover", function (a) { $(".hover-user-top-menu").addClass("active") }).on("mouseout", function (a) { $(".hover-user-top-menu").removeClass("active") }) }, trimAppUrl: function () { "/" == aiz.data.appUrl.slice(-1) && (aiz.data.appUrl = aiz.data.appUrl.slice(0, aiz.data.appUrl.length - 1)) }, setCookie: function (a, t, l) { var i = new Date; i.setTime(i.getTime() + 864e5 * l); var o = "expires=" + i.toUTCString(); document.cookie = a + "=" + t + ";" + o + ";path=/" }, getCookie: function (a) { for (var t = a + "=", l = decodeURIComponent(document.cookie).split(";"), i = 0; i < l.length; i++) { for (var o = l[i]; " " === o.charAt(0);)o = o.substring(1); if (0 === o.indexOf(t)) return o.substring(t.length, o.length) } return "" }, acceptCookie: function () { aiz.extra.getCookie("acceptCookies") || $(".aiz-cookie-alert").addClass("show"), $(".aiz-cookie-accept").on("click", function () { aiz.extra.setCookie("acceptCookies", !0, 60), $(".aiz-cookie-alert").removeClass("show") }) }, setSession: function () { $(".set-session").each(function () { var a = $(this), t = a.data("key"), l = a.data("value"); let i = new Date, o = { value: l, expiry: i.getTime() + 36e5 }; a.on("click", function () { localStorage.setItem(t, JSON.stringify(o)) }) }) }, showSessionPopup: function () { $(".removable-session").each(function () { var a = $(this), t = a.data("key"); a.data("value"); var l = {}; localStorage.getItem(t) && (l = JSON.parse(l = localStorage.getItem(t))); let i = new Date; (void 0 === l.expiry || i.getTime() > l.expiry) && a.removeClass("d-none") }) } }, setInterval(function () { aiz.extra.refreshToken() }, 36e5), aiz.extra.initActiveMenu(), aiz.extra.mobileNavToggle(), aiz.extra.deleteConfirm(), aiz.extra.multiModal(), aiz.extra.inputRating(), aiz.extra.bsCustomFile(), aiz.extra.stopPropagation(), aiz.extra.outsideClickHide(), aiz.extra.scrollToBottom(), aiz.extra.classToggle(), aiz.extra.collapseSidebar(), aiz.extra.autoScroll(), aiz.extra.addMore(), aiz.extra.removeParent(), aiz.extra.selectHideShow(), aiz.extra.plusMinus(), aiz.extra.hovCategoryMenu(), aiz.extra.clickCategoryMenu(), aiz.extra.hovUserTopMenu(), aiz.extra.trimAppUrl(), aiz.extra.acceptCookie(), aiz.extra.setSession(), aiz.extra.showSessionPopup(), aiz.plugins.metismenu(), aiz.plugins.bootstrapSelect(), aiz.plugins.tagify(), aiz.plugins.textEditor(), aiz.plugins.tooltip(), aiz.plugins.countDown(), aiz.plugins.countDownCircle(), aiz.plugins.dateRange(), aiz.plugins.timePicker(), aiz.plugins.colorPicker(), aiz.plugins.fooTable(), aiz.plugins.slickCarousel(), aiz.plugins.noUiSlider(), aiz.plugins.zoom(), aiz.plugins.jsSocials(), aiz.uploader.initForInput(), aiz.uploader.removeAttachment(), aiz.uploader.previewGenerate() }(jQuery);
